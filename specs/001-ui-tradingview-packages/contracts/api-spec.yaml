openapi: 3.0.3
info:
  title: TradingView Configuration API
  description: API for managing TradingView chart configurations and plugin settings
  version: 1.0.0
  contact:
    name: Orderly Network
    url: https://orderly.network
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.orderly.network/v1
    description: Production server
  - url: https://staging-api.orderly.network/v1
    description: Staging server

paths:
  /charts/config:
    get:
      summary: Get chart configuration
      description: Retrieves chart configuration for a specific user and symbol
      tags:
        - Configuration
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
            format: uuid
          description: User identifier
        - name: symbol
          in: query
          required: true
          schema:
            type: string
            pattern: '^[A-Z0-9]+-[A-Z0-9]+$'
          description: Trading symbol (e.g., BTC-USDT)
        - name: version
          in: query
          required: false
          schema:
            type: string
            pattern: '^\d+\.\d+\.\d+$'
          description: Configuration version
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChartConfigurationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Save chart configuration
      description: Saves or updates chart configuration for a specific user and symbol
      tags:
        - Configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChartConfigurationRequest'
      responses:
        '200':
          description: Configuration saved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveConfigurationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /charts/config/{configId}:
    get:
      summary: Get specific configuration
      description: Retrieves a specific chart configuration by ID
      tags:
        - Configuration
      parameters:
        - name: configId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Configuration identifier
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChartConfigurationResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      summary: Update configuration
      description: Updates a specific chart configuration
      tags:
        - Configuration
      parameters:
        - name: configId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Configuration identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChartConfigurationRequest'
      responses:
        '200':
          description: Configuration updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveConfigurationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: Delete configuration
      description: Deletes a specific chart configuration
      tags:
        - Configuration
      parameters:
        - name: configId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Configuration identifier
      responses:
        '200':
          description: Configuration deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConfigurationResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /plugins:
    get:
      summary: Get available plugins
      description: Retrieves list of available TradingView plugins
      tags:
        - Plugins
      parameters:
        - name: category
          in: query
          required: false
          schema:
            type: string
            enum: [core, trading, drawing, analytics, custom]
          description: Plugin category filter
        - name: enabled
          in: query
          required: false
          schema:
            type: boolean
          description: Filter by enabled status
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginsResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Register plugin
      description: Registers a new custom plugin
      tags:
        - Plugins
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPluginRequest'
      responses:
        '201':
          description: Plugin registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterPluginResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: Plugin already exists
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /plugins/{pluginId}:
    get:
      summary: Get plugin details
      description: Retrieves detailed information about a specific plugin
      tags:
        - Plugins
      parameters:
        - name: pluginId
          in: path
          required: true
          schema:
            type: string
          description: Plugin identifier
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginDetailsResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      summary: Update plugin
      description: Updates plugin configuration
      tags:
        - Plugins
      parameters:
        - name: pluginId
          in: path
          required: true
          schema:
            type: string
          description: Plugin identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePluginRequest'
      responses:
        '200':
          description: Plugin updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePluginResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: Delete plugin
      description: Deletes a custom plugin
      tags:
        - Plugins
      parameters:
        - name: pluginId
          in: path
          required: true
          schema:
            type: string
          description: Plugin identifier
      responses:
        '200':
          description: Plugin deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePluginResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    ChartConfigurationResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/ChartConfiguration'
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'

    ChartConfigurationRequest:
      type: object
      required:
        - userId
        - symbol
        - theme
        - interval
        - plugins
      properties:
        userId:
          type: string
          format: uuid
          description: User identifier
        symbol:
          type: string
          pattern: '^[A-Z0-9]+-[A-Z0-9]+$'
          description: Trading symbol
        theme:
          $ref: '#/components/schemas/Theme'
        interval:
          type: string
          pattern: '^[0-9]+[A-Z]$'
          description: Chart interval (e.g., 1D, 4H, 15M)
        plugins:
          type: array
          items:
            $ref: '#/components/schemas/PluginConfig'
          description: Plugin configurations
        studiesOverrides:
          type: object
          additionalProperties: true
          description: TradingView studies overrides
        overrides:
          type: object
          additionalProperties: true
          description: TradingView overrides
        ui:
          $ref: '#/components/schemas/UIConfig'
        externalConfig:
          $ref: '#/components/schemas/ExternalConfig'

    ChartConfiguration:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Configuration identifier
        userId:
          type: string
          format: uuid
          description: User identifier
        symbol:
          type: string
          description: Trading symbol
        theme:
          $ref: '#/components/schemas/Theme'
        interval:
          type: string
          description: Chart interval
        plugins:
          type: array
          items:
            $ref: '#/components/schemas/PluginConfig'
        studiesOverrides:
          type: object
          additionalProperties: true
        overrides:
          type: object
          additionalProperties: true
        ui:
          $ref: '#/components/schemas/UIConfig'
        version:
          type: string
          pattern: '^\d+\.\d+\.\d+$'
          description: Configuration version
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp

    PluginConfig:
      type: object
      required:
        - name
        - version
        - enabled
      properties:
        name:
          type: string
          description: Plugin identifier
        version:
          type: string
          pattern: '^\d+\.\d+\.\d+$'
          description: Plugin version
        enabled:
          type: boolean
          description: Whether plugin is active
        config:
          type: object
          additionalProperties: true
          description: Plugin-specific configuration
        dependencies:
          type: array
          items:
            type: string
          description: Required plugins
        loadOrder:
          type: integer
          minimum: 0
          description: Loading priority

    Theme:
      type: string
      enum:
        - light
        - dark
      description: Chart theme

    UIConfig:
      type: object
      properties:
        showToolbar:
          type: boolean
          default: true
        showTimeframes:
          type: boolean
          default: true
        showStudies:
          type: boolean
          default: true
        customCSS:
          type: string
          description: Custom CSS styles

    ExternalConfig:
      type: object
      properties:
        apiEndpoint:
          type: string
          format: uri
          description: API endpoint URL
        configVersion:
          type: string
          pattern: '^\d+\.\d+\.\d+$'
          description: Configuration version
        cacheDuration:
          type: integer
          minimum: 0
          default: 300
          description: Cache duration in seconds

    SaveConfigurationResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            configId:
              type: string
              format: uuid
              description: Saved configuration ID
            version:
              type: string
              description: Configuration version
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'

    DeleteConfigurationResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Configuration deleted successfully
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'

    PluginsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/PluginInfo'
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'

    PluginInfo:
      type: object
      properties:
        id:
          type: string
          description: Plugin identifier
        name:
          type: string
          description: Plugin name
        version:
          type: string
          pattern: '^\d+\.\d+\.\d+$'
          description: Plugin version
        description:
          type: string
          description: Plugin description
        category:
          $ref: '#/components/schemas/PluginCategory'
        author:
          type: string
          description: Plugin author
        enabled:
          type: boolean
          description: Whether plugin is enabled
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp

    PluginCategory:
      type: string
      enum:
        - core
        - trading
        - drawing
        - analytics
        - custom
      description: Plugin category

    RegisterPluginRequest:
      type: object
      required:
        - name
        - version
        - category
        - code
      properties:
        name:
          type: string
          description: Plugin identifier
        version:
          type: string
          pattern: '^\d+\.\d+\.\d+$'
          description: Plugin version
        description:
          type: string
          description: Plugin description
        category:
          $ref: '#/components/schemas/PluginCategory'
        author:
          type: string
          description: Plugin author
        code:
          type: string
          description: Plugin code (base64 encoded)
        config:
          type: object
          additionalProperties: true
          description: Default plugin configuration
        dependencies:
          type: array
          items:
            type: string
          description: Required plugins

    RegisterPluginResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            pluginId:
              type: string
              description: Registered plugin ID
            status:
              type: string
              enum: [pending, approved, rejected]
              description: Registration status
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'

    PluginDetailsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/PluginDetails'
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'

    PluginDetails:
      type: object
      properties:
        id:
          type: string
          description: Plugin identifier
        name:
          type: string
          description: Plugin name
        version:
          type: string
          pattern: '^\d+\.\d+\.\d+$'
          description: Plugin version
        description:
          type: string
          description: Plugin description
        category:
          $ref: '#/components/schemas/PluginCategory'
        author:
          type: string
          description: Plugin author
        enabled:
          type: boolean
          description: Whether plugin is enabled
        config:
          type: object
          additionalProperties: true
          description: Plugin configuration
        dependencies:
          type: array
          items:
            type: string
          description: Required plugins
        downloadCount:
          type: integer
          description: Download count
        rating:
          type: number
          minimum: 0
          maximum: 5
          description: User rating
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp

    UpdatePluginRequest:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether plugin is enabled
        config:
          type: object
          additionalProperties: true
          description: Plugin configuration
        version:
          type: string
          pattern: '^\d+\.\d+\.\d+$'
          description: Target version

    UpdatePluginResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            pluginId:
              type: string
              description: Updated plugin ID
            version:
              type: string
              description: Plugin version
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'

    DeletePluginResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Plugin deleted successfully
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'

    ResponseMetadata:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: Response timestamp
        requestId:
          type: string
          format: uuid
          description: Request identifier
        version:
          type: string
          pattern: '^\d+\.\d+\.\d+$'
          description: API version

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              description: Error code
            message:
              type: string
              description: Error message
            details:
              type: object
              additionalProperties: true
              description: Error details
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    UnprocessableEntity:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Conflict:
      description: Resource conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication

security:
  - ApiKeyAuth: []